<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.dao.ModelMapper">
    <resultMap id="BaseResultMap" type="com.oa.model.Model">
        <id column="model_id" jdbcType="INTEGER" property="modelId"/>
        <result column="model_name" jdbcType="VARCHAR" property="modelName"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
    </resultMap>
    <sql id="Base_Column_List">
        model_id, model_name, create_user_id, createtime,type
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from model
        where model_id = #{modelId,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryTName" parameterType="com.oa.model.Model" resultType="int">
        select
        count(*)
        from model
        where model_name = #{modelName,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE model,model_column from model,model_column where model.model_id=model_column.model_id
        and model.model_id = #{modelId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.oa.model.Model" useGeneratedKeys="true" keyProperty="model_id">
        insert into model (model_name, create_user_id,
        createtime)
        values ( #{modelName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER},now())
    </insert>
    <insert id="insertOne" parameterType="com.oa.model.Model" useGeneratedKeys="true" keyProperty="model_id">
        insert into model (model_name, create_user_id,
        createtime)
        values ( #{modelName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER},now())
    </insert>
    <insert id="insertSelective" parameterType="com.oa.model.Model">
        insert into model
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="modelId != null">
                model_id,
            </if>
            <if test="modelName != null">
                model_name,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="modelId != null">
                #{modelId,jdbcType=INTEGER},
            </if>
            <if test="modelName != null">
                #{modelName,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oa.model.Model">
        update model
        <set>
            <if test="modelName != null">
                model_name = #{modelName,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where model_id = #{modelId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oa.model.Model">
        update model
        set model_name = #{modelName,jdbcType=VARCHAR},
        create_user_id = #{createUserId,jdbcType=INTEGER},
        createtime = #{createtime,jdbcType=TIMESTAMP}
        where model_id = #{modelId,jdbcType=INTEGER}
    </update>
    <select id="selectCount" resultType="int">
        select count(*) from model

    </select>
    <select id="selectStatCount" resultType="int" parameterType="com.oa.model.Model">
        select count(*) from model
        <where>
            <if test="createUserId!=null">
                and create_user_id=#{createUserId}
            </if>
            and type=1
        </where>


    </select>
    <select id="selectId" resultType="int">
        select max(model_id) as model_id from model

    </select>
    <select id="" resultType="com.oa.model.Model" parameterType="com.oa.model.Page">

       select * from model order by createtime desc LIMIT #{start},#{count}

    </select>
    <select id="selectPageSplit" parameterType="com.oa.model.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from model
        order by createtime desc LIMIT #{start},#{count}
    </select>
    <update id="updateType" parameterType="com.oa.model.Model">
        update model
        set type = 1
        where model_id = #{modelId,jdbcType=INTEGER}
    </update>
    <select id="selectStatPageSplit" parameterType="com.oa.model.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from model
        <where>
            <if test="model.createUserId!=null">
                and create_user_id=#{model.createUserId}
            </if>
            and type=1
        </where>

        order by createtime desc LIMIT #{start},#{count}
    </select>
    <!-- where create_user_id=#{model.createUserId} or create_user_id=2017-->

    <select id="selectByPrimaryKeys" parameterType="java.lang.Integer" resultMap="rm">

        select * from model m,model_column mc,model_column_name mcn where m.model_id=mc.model_id and
        mc.column_id=mcn.column_id and m.model_id=#{modelId}

    </select>
    <resultMap type="com.oa.model.Model" id="rm">

        <id column="model_id" jdbcType="INTEGER" property="modelId"/>
        <result column="model_name" jdbcType="VARCHAR" property="modelName"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="type" jdbcType="INTEGER" property="type"/>

        <collection property="mc" ofType="com.oa.model.ModelColumn">
            <id column="model_id" jdbcType="INTEGER" property="modelId"/>
            <result column="column_id" jdbcType="INTEGER" property="columnId"/>
        </collection>
        <collection property="list" ofType="com.oa.model.ModelColumnName">
            <id column="column_id" jdbcType="INTEGER" property="columnId"/>
            <result column="column_name" jdbcType="VARCHAR" property="columnName"/>
        </collection>

    </resultMap>


</mapper>
